# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  inputs:
   packageType: sdk
   version: '6.x'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Install Scoop
      iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
 
      # Install Allure using Scoop
      scoop install allure
  displayName: 'Install Allure with Scoop'

- script: |
    echo "##vso[task.prependpath]$(Pipeline.Workspace)/allure/bin"
  displayName: 'Add Allure to PATH'

- task: CmdLine@2
  inputs:
    targetType: 'inline'
    script: |
      allure --version
  displayName: 'Verify Allure Installation'


- task: CmdLine@2
  displayName: 'Generate Allure Report'
  inputs:
    script: 'allure generate --clean'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'



- script: |
    #dotnet tool install --global Microsoft.Playwright.CLI  # Install Playwright 
    dotnet add package Microsoft.Playwright.NUnit --version 1.42.0
  displayName: 'Install Playwright'


- task: PowerShell@2
  inputs:
    targetType: inline
    script: |
     pwsh bin/Release/net6.0/playwright.ps1 install --with-deps
  displayName: 'Install Browser'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
  displayName: 'restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/*.csproj'
    testRunTitle: 'Runnning test'
  displayName: 'Runnint Test'
  continueOnError: true

- task: CmdLine@2
  displayName: 'Generate Allure Report'
  inputs:
    script: 'allure generate --clean'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'allure-report'
    artifactName: 'AllureReport'
    publishLocation: 'Container'
 

